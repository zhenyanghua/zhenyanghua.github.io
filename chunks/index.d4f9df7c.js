import{m as e}from"../index.7b723884.js";import"./time.daaab1ba.js";import{P as t}from"./index.900a25fd.js";export default function(){return e`<${t} ...${{title:"Pass Parameters to the ExecutiveService Adapter",date:"2018-11-06 17:00:00"}}>
      <article dangerouslySetInnerHTML=${{__html:'<p>This tip shows how to pass pipeline input variables to an <code>ExecutiveService</code> adapter in webMethods.</p>\n\x3c!-- Excerpt End --\x3e\n\n<p>The <code>ExecutiveService</code> adapter is used to execute a java service which utilizes the connection from the Integration Server managed connection pool to execute custom SQL statements. The adapter service input include an <code>Object</code> type <code>targetServiceInput</code>. This actually is a IS <code>document</code> type based on my experiment.</p>\n<p>To properly send pipeline variables to the wrapped java service, a wrapper document type needs to be created in a map service to map to the <code>targetServiceInput</code> object in the adapter service and then any properties under this document, will be available to access from the wrapper java service by doing the following:</p>\n<div class="codeblock">\n  <pre>IDataMap idm = new IDataMap(pipeline);\nString foo = idm.getAsString(&quot;bar&quot;);</pre>\n</div><p>This java service has an input of <code>bar</code> defined in its <em>Input</em> tab.</p>\n'}}/>
    </${t}>`}