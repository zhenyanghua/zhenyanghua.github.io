import{m as e}from"../index.e45ada53.js";import"./time.daaab1ba.js";import{P as o}from"./index.1cdefbad.js";export default function(){return e`<${o} ...${{title:"Useful File java.io Mini API",date:"2018-08-29 17:00:00"}}>
      <article dangerouslySetInnerHTML=${{__html:'<h2>\n  <a id="java-io-is-a-very-extensive-library-there-are-numerous-ways-and-combinations-to-write-read-data-on-a-file-this-article-summaries-some-very-useful-classes-in-code-java-io-code-package-" class="anchor" aria-hidden="true" href="#java-io-is-a-very-extensive-library-there-are-numerous-ways-and-combinations-to-write-read-data-on-a-file-this-article-summaries-some-very-useful-classes-in-code-java-io-code-package-">\n    <svg class="icon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg>\n  </a>Java io is a very extensive library. There are numerous ways and combinations to write/read data on a file. This article summaries some very useful classes in <code>java.io</code> package.</h2><p>Here is a table from <a href="https://www.amazon.com/Java-Programmer-Exam-Guide-1Z0-809-ebook/dp/B07C8BJ9TG" target="_blank">OCP Java SE 8 Programmer II Exam Guide (Exam 1Z0-809)</a> that summarizes the basic classes in file io.\n|java.io Class|Extends From|Key Constructor(s)|Key Methods|\n|---|---|---|---|\n|<code>File</code>|<code>Object</code>|<code>File, String</code><br/> <code>String</code><br/> <code>String, String</code>|<code>createNewFile()</code><br/> <code>delete()</code><br/> <code>exists()</code><br/> <code>isDirectory()</code><br/> <code>isFile()</code><br/><code>list()</code><br/><code>mkdir()</code><br/><code>renameTo()</code>|\n|<code>FileWriter</code>|<code>Writer</code>|<code>File</code><br/><code>String</code>|<code>close()</code><br/><code>flush()</code><br/><code>write()</code>|\n|<code>BufferedWriter</code>|<code>Writer</code>|<code>Writer</code>|<code>close()</code><br/><code>flush()</code><br/><code>newLine()</code><br/><code>write()</code>|\n|<code>PrintWriter</code>|<code>Writer</code>|<code>File</code><br/><code>String</code><br/><code>OuputStream</code><br/><code>Writer</code>|<code>close()</code><br/><code>flush()</code><br/><code>format()</code><br/><code>printf()</code><br/><code>print()</code><br/><code>println()</code><br/><code>write()</code>|\n|<code>FileOutputStream</code>|<code>OutputStream</code>|<code>File</code><br/><code>String</code>|<code>close()</code><br/><code>write()</code>|\n|<code>FileReader</code>|<code>Reader</code>|<code>File</code><br/><code>String</code>|<code>read()</code>|\n|<code>BufferedReader</code>|<code>Reader</code>|<code>Reader</code>|<code>read()</code><br/><code>readLine()</code>|\n|<code>FileInputStream</code>|<code>InputStream</code>|<code>File</code><br/><code>String</code>|<code>read()</code><br/><code>close()</code>|</p>\n<h1>\n  <a id="examples" class="anchor" aria-hidden="true" href="#examples">\n    <svg class="icon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg>\n  </a>Examples</h1><div class="codeblock">\n  <pre>import java.io.*;\n\nclass Writer1 {\n    public static void main(String... args) {\n        try {\n            boolean newFile = false;\n            File file = new File(&quot;fileWrite1.txt&quot;);\n            System.out.println(file.exists());\n            newFile = file.createNewFile();\n            System.out.println(newFile);\n            System.out.println(file.exists());\n        } catch(IOException e) {}\n\n    }\n}\n\nclass Writer2 {\n    public static void main(String... args) {\n        char[] in = new char[50];\n        int size = 0;\n        try {\n            File file = new File(&quot;fileWrite2.txt&quot;);\n            FileWriter fw = new FileWriter(file);\n            fw.write(&quot;howdy\nfolks\n&quot;);\n            fw.flush();\n            fw.close();\n            FileReader fr = new FileReader(file);\n            size = fr.read(in);\n            System.out.print(size + &quot; &quot;);\n            for(char c: in) {\n                System.out.print(c);\n            }\n            fr.close();\n        } catch(IOException e) { }\n    }\n}\n\nclass Writer3 {\n    public static void main(String... args) {\n        byte[] in = new byte[50];\n        int size = 0;\n        File file = new File(&quot;fileWrite3.txt&quot;);\n        try(FileOutputStream outStream = new FileOutputStream(file);\n            FileInputStream inStream = new FileInputStream(file)) {\n            String s = &quot;howdy\nfolks\n&quot;;\n            outStream.write(s.getBytes());\n            outStream.flush();\n\n            size = inStream.read(in);\n            System.out.print(size + &quot; &quot;);\n            for(byte b: in) {\n                System.out.print((char) b);\n            }\n        } catch(IOException e) {}\n    }\n}\n\nclass Writer4 {\n    public static void main(String... args) {\n        File file = new File(&quot;fileWrite4.txt&quot;);\n        try(PrintWriter pw = new PrintWriter(file);\n            BufferedReader br = new BufferedReader(new FileReader(file))) {\n            pw.println(&quot;howdy&quot;);\n            pw.println(&quot;folks&quot;);\n            pw.flush();\n\n            String line = null;\n            while(true) {\n                line = br.readLine();\n                if (line == null) break;\n                System.out.println(line);\n            }\n\n        } catch(IOException e) {}    \n    }\n}</pre>\n</div>'}}/>
    </${o}>`}