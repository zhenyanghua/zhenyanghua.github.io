import{m as e}from"../index.f7c0c5b6.js";import"./time.daaab1ba.js";import{P as t}from"./index.ad101fb9.js";export default function(){return e`<${t} ...${{title:"Spring Data Substitutes ObjectMapper",date:"2018-04-27 17:00:00"}}>
      <article dangerouslySetInnerHTML=${{__html:'<h2>\n  <a id="most-times-when-we-need-a-dto-mapping-from-our-persistent-entity-we-would-think-of-using-an-objectmapper-however-with-the-help-of-the-spring-data-you-might-not-need-an-objectmapper-this-lesson-presents-a-solution-to-use-spring-data-to-replace-simple-objectmapper-use-case-" class="anchor" aria-hidden="true" href="#most-times-when-we-need-a-dto-mapping-from-our-persistent-entity-we-would-think-of-using-an-objectmapper-however-with-the-help-of-the-spring-data-you-might-not-need-an-objectmapper-this-lesson-presents-a-solution-to-use-spring-data-to-replace-simple-objectmapper-use-case-">\n    <svg class="icon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg>\n  </a>Most times when we need a DTO mapping from our persistent entity, we would think of using an ObjectMapper. However, with the help of the Spring Data, you might not need an ObjectMapper. This lesson presents a solution to use Spring Data to replace simple ObjectMapper use case.</h2><h2>\n  <a id="story" class="anchor" aria-hidden="true" href="#story">\n    <svg class="icon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg>\n  </a>Story</h2><p>Given a <code>Book</code> class and one of it&#39;s DTO class <code>BookMeta</code> as shown below, create a repository method that retrieve all <code>BookMeta</code> by category.</p>\n<div class="codeblock">\n  <pre>@Entity\npublic class Book {\n    private String title;\n    private String author;\n    private String category;\n    private String intro;\n\n    // getter and setters are ommitted for brevity\n}\n\n@Entity\npublic class BookMeta {\n    private String title;\n    private String author;\n\n    public BookMeta(String title, String author) {\n        this.title = title;\n        this.author = author;\n    }\n\n    // getter and setters are ommitted for brevity\n}</pre>\n</div><h2>\n  <a id="solution" class="anchor" aria-hidden="true" href="#solution">\n    <svg class="icon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg>\n  </a>Solution</h2><p>As part of JPA, JPQL now supports <strong>constructor expressions</strong>. What we could do is to <code>new</code> a full-classpath-constructor in the named query.</p>\n<div class="codeblock">\n  <pre>\n@Repository\npublic interface BookRepository extends JpaRepository&lt;Book, Long&gt; {\n    @Query(&quot;SELECT new com.leafyjava.domains.dtos.BookMeta(b.title, b.author) FROM Book b WHERE b.category = :category&quot;)\n    List&lt;BookMeta&gt; findAllMetaByCategory(@Param(&quot;category&quot;) String category);\n}</pre>\n</div><h2>\n  <a id="lesson-learnt" class="anchor" aria-hidden="true" href="#lesson-learnt">\n    <svg class="icon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg>\n  </a>Lesson Learnt</h2><ul>\n<li>DTO class full classpath must be used in the <code>@Query</code> annotation</li>\n<li>Use <code>@Param</code> to set query parameters.</li>\n</ul>\n'}}/>
    </${t}>`}